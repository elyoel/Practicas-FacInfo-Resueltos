;Parte A
EOI EQU 20H
IMR EQU 21H
INT0 EQU 24h
INT1 EQU 25H
N_F10 EQU 10
N_TIMER EQU 11
CONT EQU 10H
COMP EQU 11h
ORG 1000h
  MSJ DB "Cuenta regresiva", 10
  NUM DB ?, 10
  
ORG 40 
IP_F10 DW RUT_F10
ORG 44
IP_TIMER DW RUT_TIMER

ORG 3000H
RUT_F10: PUSH BX
  PUSH AX
  MOV AL, offset NUM - offset MSJ
  MOV BX, offset MSJ
  INT 7
  MOV BX, offset NUM
  CALL CONFIG_TIMER
  MOV AL, EOI
  OUT EOI, AL;
  POP AX
  POP BX
  IRET
  
RUT_TIMER: PUSH AX
  CALL OFF_F10
  MOV AL, 2
  MOV BX, offset NUM
  INT 7
  CMP byte ptr [bX], 30h
  JNZ SALTO
  CALL OFF_TIMER
SALTO: 
  DEC byte ptr [BX]
  IN AL, COMP
  INC AL
  OUT COMP, AL
  
  MOV AL, EOI
  OUT EOI, AL;
  POP AX
IRET
 
ORG 3200h
CONFIG_PIO:
  PUSH AX
  MOV AL, 0FEh
  OUT IMR, AL;
  MOV AL, N_F10
  OUT INT0, AL;
  MOV AL, N_TIMER
  OUT INT1, AL;
  POP AX
  RET

CONFIG_TIMER:
  PUSH AX
  MOV AL, 0FCH
  OUT IMR, AL
  MOV AL, 0
  OUT CONT, AL
  MOV AL, 1
  OUT COMP, AL
  POP AX
RET

ORG 3300h
IMPRIMIR: PUSH BX
  PUSH AX
  MOV BX, offset MSJ
  MOV AL, Offset NUM - offset MSj
  INT 7
  POP AX
  POP BX
  RET

OFF_F10: CLI
  PUSH AX
  IN AL, IMR
  OR AL, 1
  OUT IMR, AL
  POP AX
  STI
RET
OFF_TIMER: CLI
  PUSH AX
  IN AL, IMR
  OR AL, 2
  OUT IMR, AL
  POP AX
  STI
  RET
  
ORG 2000H
  CLI
  CALL CONFIG_PIO
  STI
  MOV BX, offset NUM
  INT 6
LAZO: JMP LAZO
INT 0
END